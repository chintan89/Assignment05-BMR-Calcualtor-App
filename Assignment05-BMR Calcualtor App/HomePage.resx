<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>